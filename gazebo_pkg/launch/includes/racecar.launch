<?xml version="1.0"?>
<launch>
  <arg name="world_name" default="racetrack" />
  <arg name="use_sim_time" default="true"/>
  <arg name="run_camera" default="false"/>
  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="true"/>
<!--   <arg name="use_sim_time" default="true"/> -->
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <arg name="x_pos" default="0.0"/>
  <arg name="y_pos" default="0.0"/>
  <arg name="z_pos" default="0.0"/> 

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find gazebo_pkg)/world/race_with_cone.world"/> 
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <arg name="model" default="$(find gazebo_pkg)/urdf/waking_robot.xacro" />
 
  <param name="robot_description" command="$(find xacro)/xacro  --inorder $(arg model)" />

  <!-- Run a python script to send a service call the gazebo_ros to spawn a URDF robot 在gazebo中加载机器人模型-->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
	args="-urdf -model robot -param robot_description -z 0.05"/> 

  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

<!-- 运行robot_state_publisher节点，发布tf  -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"  respawn="false" output="screen" >
        <param name="publish_frequency" type="double" value="50.0" />
    </node>

<!--rf2o_Laser_Odometry
    <include file="$(find gazebo_pkg)/launch/includes/rf2o_laser_odometry.launch" /> -->

</launch>
